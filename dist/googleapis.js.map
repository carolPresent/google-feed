{"version":3,"sources":["../googleapis.js"],"names":["code","auth","createConnection","getToken","data","tokens","setCredentials","plus","getGooglePlusApi","people","get","userId","me","userGoogleId","id","userGoogleEmail","emails","length","value","model","email","UserService","SaveLoginDetails","FeedService","GetFeeds","getGoogleAccountFromCode","require","google","googleConfig","clientId","clientSecret","redirect","defaultScope","OAuth2","getConnectionUrl","generateAuthUrl","access_type","prompt","scope","version","urlGoogle","url","module","exports","UrlGoogle","GetGoogleAccountFromCode"],"mappings":";;;uEAyCA,iBAAwCA,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,4BADV,GACiBC,kBADjB;AAAA;AAAA,+BAEuBD,KAAKE,QAAL,CAAcH,IAAd,CAFvB;;AAAA;AAEUI,4BAFV;AAGUC,8BAHV,GAGmBD,KAAKC,MAHxB;;AAIIJ,6BAAKK,cAAL,CAAoBD,MAApB;AACME,4BALV,GAKiBC,iBAAiBP,IAAjB,CALjB;AAAA;AAAA,+BAMqBM,KAAKE,MAAL,CAAYC,GAAZ,CAAgB,EAAEC,QAAQ,IAAV,EAAhB,CANrB;;AAAA;AAMUC,0BANV;AAOUC,oCAPV,GAOyBD,GAAGR,IAAH,CAAQU,EAPjC;AAQUC,uCARV,GAQ4BH,GAAGR,IAAH,CAAQY,MAAR,IAAkBJ,GAAGR,IAAH,CAAQY,MAAR,CAAeC,MAAjC,IAA2CL,GAAGR,IAAH,CAAQY,MAAR,CAAe,CAAf,EAAkBE,KARzF;AAUQC,6BAVR,GAUc;AACNL,gCAAID,YADE;AAENO,mCAAOL,eAFD;AAGNV,oCAAQA;AAHF,yBAVd;AAAA;AAAA,+BAgBUgB,YAAYC,gBAAZ,CAA6BH,KAA7B,CAhBV;;AAAA;AAAA;AAAA,+BAkBiBI,YAAYC,QAAZ,EAlBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,wB;;;;;;;eAzCEC,QAAQ,YAAR,C;IAAVC,M,YAAAA,M;;AACP,IAAMN,cAAYK,QAAQ,gBAAR,CAAlB;AACA,IAAMH,cAAYG,QAAQ,gBAAR,CAAlB;;AAEA,IAAME,eAAe;AACjBC,cAAU,0EADO;AAEjBC,kBAAc,0BAFG;AAGjBC,cAAU;AAHO,CAArB;;AAMA,IAAMC,eAAe,CACjB,yCADiB,EAEjB,gDAFiB,CAArB;;AAKA,SAAS9B,gBAAT,GAA4B;AACxB,WAAO,IAAIyB,OAAO1B,IAAP,CAAYgC,MAAhB,CACHL,aAAaC,QADV,EAEHD,aAAaE,YAFV,EAGHF,aAAaG,QAHV,CAAP;AAKH;;AAED,SAASG,gBAAT,CAA0BjC,IAA1B,EAAgC;AAC5B,WAAOA,KAAKkC,eAAL,CAAqB;AACxBC,qBAAa,SADW;AAExBC,gBAAQ,SAFgB;AAGxBC,eAAON;AAHiB,KAArB,CAAP;AAKH;;AAED,SAASxB,gBAAT,CAA0BP,IAA1B,EAAgC;AAC5B,WAAO0B,OAAOpB,IAAP,CAAY,EAAEgC,SAAS,IAAX,EAAiBtC,UAAjB,EAAZ,CAAP;AACH;;AAED,SAASuC,SAAT,GAAqB;AACjB,QAAMvC,OAAOC,kBAAb;AACA,QAAMuC,MAAMP,iBAAiBjC,IAAjB,CAAZ;AACA,WAAOwC,GAAP;AACH;;AAwBDC,OAAOC,OAAP,GAAe;AACXC,eAAUJ,SADC;AAEXK,8BAAyBpB;AAFd,CAAf","file":"googleapis.js","sourcesContent":["const {google} = require('googleapis');\nconst UserService=require('./user-service');\nconst FeedService=require('./feed-service');\n\nconst googleConfig = {\n    clientId: '195776256689-t8nm0b0jh6a18lh45f0v7gg1kphf298n.apps.googleusercontent.com',\n    clientSecret: 'j6k_Pk78T69PysWkx6UCLrH7',\n    redirect: 'https://googlefeed.herokuapp.com/feed',\n};\n\nconst defaultScope = [\n    'https://www.googleapis.com/auth/plus.me',\n    'https://www.googleapis.com/auth/userinfo.email',\n];\n\nfunction createConnection() {\n    return new google.auth.OAuth2(\n        googleConfig.clientId,\n        googleConfig.clientSecret,\n        googleConfig.redirect\n    );\n}\n\nfunction getConnectionUrl(auth) {\n    return auth.generateAuthUrl({\n        access_type: 'offline',\n        prompt: 'consent',\n        scope: defaultScope\n    });\n}\n\nfunction getGooglePlusApi(auth) {\n    return google.plus({ version: 'v1', auth });\n}\n\nfunction urlGoogle() {\n    const auth = createConnection();\n    const url = getConnectionUrl(auth);\n    return url;\n}\n\nasync function getGoogleAccountFromCode(code) {\n    const auth = createConnection();\n    const data = await auth.getToken(code);\n    const tokens = data.tokens;\n    auth.setCredentials(tokens);\n    const plus = getGooglePlusApi(auth);\n    const me = await plus.people.get({ userId: 'me' });\n    const userGoogleId = me.data.id;\n    const userGoogleEmail = me.data.emails && me.data.emails.length && me.data.emails[0].value;\n\n    let model={\n        id: userGoogleId,\n        email: userGoogleEmail,\n        tokens: tokens,\n    };\n\n    await UserService.SaveLoginDetails(model);\n\n    return await FeedService.GetFeeds();\n\n}\n\nmodule.exports={\n    UrlGoogle:urlGoogle,\n    GetGoogleAccountFromCode:getGoogleAccountFromCode\n}"]}